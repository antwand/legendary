--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "ui/LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to
-- get a callback function in creating scene process.
-- the returned callback function will be registered to
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create back
local back = cc.Sprite:create("UIRes/ui_n/000132.png")
back:setName("back")
back:setTag(13)
back:setCascadeColorEnabled(true)
back:setCascadeOpacityEnabled(true)
back:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(back)
layout:setPercentWidth(0.4805)
layout:setPercentHeight(0.2630)
layout:setSize({width = 492.0000, height = 202.0000})
layout:setRightMargin(532.0000)
layout:setTopMargin(566.0000)
back:setBlendFunc({src = 1, dst = 771})
Scene:addChild(back)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(false)
Text_1:setFontName("fonts/W2.ttf")
Text_1:setFontSize(16)
Text_1:setString([[无阿斯顿撒旦撒打死打死打伤打出发啊大大]])
Text_1:enableOutline({r = 26, g = 26, b = 26, a = 255}, 1)
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("content")
Text_1:setTag(14)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setAnchorPoint(1.1833, 0.5874)
Text_1:setPosition(518.1423, 114.7265)
Text_1:setTextColor({r = 230, g = 220, b = 169})
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.5060)
layout:setPositionPercentY(0.1494)
layout:setPercentWidth(0.3906)
layout:setPercentHeight(0.1432)
layout:setSize({width = 400.0000, height = 110.0000})
layout:setLeftMargin(44.8169)
layout:setRightMargin(579.1831)
layout:setTopMargin(607.8881)
layout:setBottomMargin(50.1119)
Scene:addChild(Text_1)

--Create Button_1
local Button_1 = ccui.Button:create()
Button_1:ignoreContentAdaptWithSize(false)
Button_1:loadTextureNormal("UIRes/Status/000033.png",0)
Button_1:loadTexturePressed("UIRes/Status/000031.png",0)
Button_1:loadTextureDisabled("UIRes/Status/000033.png",0)
Button_1:setTitleFontName("fonts/W2.ttf")
Button_1:setTitleFontSize(14)
Button_1:setTitleText("确定")
Button_1:setTitleColor({r = 243, g = 226, b = 149})
Button_1:setScale9Enabled(true)
Button_1:setCapInsets({x = 15, y = 6, width = 26, height = 8})
Button_1:setLayoutComponentEnabled(true)
Button_1:setName("Button")
Button_1:setTag(15)
Button_1:setCascadeColorEnabled(true)
Button_1:setCascadeOpacityEnabled(true)
Button_1:setPosition(247.7545, 34.0520)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_1)
layout:setPositionPercentX(0.2419)
layout:setPositionPercentY(0.0443)
layout:setPercentWidth(0.0547)
layout:setPercentHeight(0.0260)
layout:setSize({width = 56.0000, height = 20.0000})
layout:setLeftMargin(219.7545)
layout:setRightMargin(748.2455)
layout:setTopMargin(723.9480)
layout:setBottomMargin(24.0520)
Scene:addChild(Button_1)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()

result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

